testvar <- "hey"
source('~/.active-rstudio-document')
install.packages("RMongo")
library(RMongo)
getwd()
file  <- "population"
fname <- paste(file,".csv",sep="")
print(fname)
print(source)
downloadpath <-"D:/Downloads/"
source <- paste(downloadpath,fname,sep="")
print(source)
getwd()
setwd ("D:/Vakke/Data Storage and Processing/")
movies <- read.csv2("movie_metadata.csv", sep=",")
head(movies)
setwd ("D:/Vakke/Data Storage and Processing")
setwd ("D:/Vakken/Data Storage and Processing")
getwd()
movies <- read.csv2("movie_metadata.csv", sep=",")
head(movies)
movies <- read.csv2("movies.csv", sep=",")
ratings <- read.csv2("ratings.csv", sep=",")
links <- read.csv2("links.csv", sep=",")
tags <- read.csv2("tags.csv", sep=",")
moviesRatings <- merge(movies, ratings, by="movieId")
head(moviesRatings)
moviesRatingsLinks <- merge(moviesRatings, links, by="movieId")
head(moviesRatingsLinks)
moviesComplete <- merge(moviesRatingsLinks, tags. by="movieId")
head(moviesComplete)
head(moviesRatingsLinks)
mcon <- mongo(collection="Data", db="Practicum", url="mongodb://localhost")
mcon$insert(moviesFromKaggle)
library(mongolite)
mcon <- mongo(collection="Data", db="Practicum", url="mongodb://localhost")
mcon$insert(moviesFromKaggle)
moviesFromKaggle <- read.csv2("movie_metadata.csv", sep=",")
mcon$insert(moviesFromKaggle)
mcon2 <- mongo(collection="DataMovielens", db="Practicum", url="mongodb://localhost")
mcon$insert(moviesRatingsLinks)
mcon <- mongo(collection="Data", db="Practicum", url="mongodb://localhost")
mcon$insert(moviesFromKaggle)
install.packages("RMongo")
install.packages("RMongo")
mcon2 <- mongo(collection="DataMovielens", db="Practicum", url="mongodb://localhost")
mcon2$insert(moviesRatingsLinks)
test <- "temp"
mcon <- mongoDbConnect("Practicum",port=27017)
moviesCollection <- "data"
dfAll<- dbGetQuery(mcon, moviesCollection,"{}", skip=0,limit=100000)
head(dfAll)
library(RMongo)
mcon <- mongoDbConnect("Practicum",port=27017)
moviesCollection <- "data"
dfAll<- dbGetQuery(mcon, moviesCollection,"{}", skip=0,limit=100000)
head(dfAll)
library(RMongo)
mcon <- mongoDbConnect("Practicum",port=27017)
moviesCollection <- "data"
dfAll<- dbGetQuery(mcon, moviesCollection,"{}")
head(dfAll)
View(moviesRatings)
View(dfAll)
mcon <- mongoDbConnect("Practicum",port=27017)
library(RMongo)
moviesCollection <- "data"
dfAll<- dbGetQuery(mcon, moviesCollection,"{}")
library(RMongo)
?mongoDbConnect
mcon <- mongoDbConnect("Practicum",port=27017)
moviesCollection <- "Data"
dfAll<- dbGetQuery(mcon, moviesCollection,"{}")
View(dfAll)
moviesCollection <- "Data"
Data<- dbGetQuery(mcon, moviesCollection,"{}",skip=0,limit=100000)
head(Data)
movielensCollection <- "DataMovielens"
movielensData <- dbGetQuery(mcon, movielensCollection,"{}",skip=0,limit=100000)
head(movielensData)
moviesCollection <- "Data"
kaggleData<- dbGetQuery(mcon, moviesCollection,"{}",skip=0,limit=100000)
head(kaggleData)
movielensCollection <- "DataMovielens"
movielensData <- dbGetQuery(mcon, movielensCollection,"{}",skip=0,limit=100000)
head(movielensData)
getwd()
View(kaggleData)
setwd ( "D:/Downloads")
randomFile <- read.csv2("File-A_BD3.csv", sep=",")
View(ratings)
View(randomFile)
randomFile <- read.csv2("File-A_BD3.csv", sep=";")
View(randomFile)
install.packages("dplyr")
library(dplyr)
library(dplyr)
filteredData <- select(randomFile, "CDR_ID"
,	"Start_datetime"
,	"End_datetime"
,	"Duration"
,	"Volume"
,	"Charge_Point_street"
,	"Charge_Point_ZIP"
,	"Charge_Point_city"
)
?select
filteredData <- select(randomFile,1:8)
View(filteredData)
View(filteredData)
colnames(filteredData)
names(filteredData) <-c("CRD_ID","StartDatetime","EndDatetime","Duration"
,"Volume","ChargePointStreet","ChargePointZIP","ChargePointCity")
View(filteredData)
View(filteredData)
?gsub
sapply(filteredData, removeSpaces("3086 PR"))
removeSpaces <- function(itemToCheck){
if(filteredData$ChargePointZIP == itemToCheck){
filteredData$ChargePointZIP <- gsub(" ", "", filteredData$ChargePointZIP, fixed = TRUE)
}
}
sapply(filteredData, removeSpaces("3086 PR"))
apply(filteredData, removeSpaces("3086 PR"))
install.packages("dplyr")
install.packages("dplyr")
?apply
class(filteredData)
apply(filteredData$ChargePointZIP, removeSpaces("3086 PR"))
removeSpaces <- function(itemToCheck){
if(filteredData$ChargePointZIP == itemToCheck){
filteredData$ChargePointZIP <- gsub(" ", "", filteredData$ChargePointZIP, fixed = TRUE)
}
}
apply(filteredData$ChargePointZIP, removeSpaces("3086 PR"))
apply(filteredData$ChargePointZIP, 1,removeSpaces("3086 PR"))
count(filteredData$ChargePointZIP)
size(filteredData$ChargePointZIP)
filteredData$ChargePointZIP
?gsub
removeSpaces <- function(text){
filteredData[ChargePointZIP == text] <- gsub(" ", "")}
apply(filteredData$ChargePointZIP, 1,removeSpaces("3086 PR"))
removeSpaces <- function(text){
filteredData[ChargePointZIP == text] <- gsub(" ", "", filteredData[ChargePointZIP])}
View(filteredData)
lapply(filteredData$ChargePointZIP,removeSpaces("3086 PR"))
getwd()
setwd ( "D:/Downloads")
randomFile <- read.csv2("File-A_BD3.csv", sep=";")
filteredData <- select(randomFile,1:8)
colnames(filteredData)
names(filteredData) <-c("CRD_ID","StartDatetime","EndDatetime","Duration"
,"Volume","ChargePointStreet","ChargePointZIP","ChargePointCity)"
removeSpaces <- function(text){
filteredData[ChargePointZIP == text] <- gsub(" ", "", filteredData[ChargePointZIP])}
removeSpaces <- function(text){
filteredData[ChargePointZIP == text] <- gsub(" ", "", filteredData[ChargePointZIP])
}
lapply(filteredData$ChargePointZIP,removeSpaces("3086 PR"))
View(filteredData)
names(filteredData) <-c("CRD_ID","StartDatetime","EndDatetime","Duration"
,"Volume","ChargePointStreet","ChargePointZIP","ChargePointCity)"
View(filteredData)
View(filteredData)
getwd()
setwd ( "D:/Downloads")
randomFile <- read.csv2("File-A_BD3.csv", sep=";")
filteredData <- select(randomFile,1:8)
colnames(filteredData)
names(filteredData) <-c("CRD_ID","StartDatetime","EndDatetime","Duration"
,"Volume","ChargePointStreet","ChargePointZIP","ChargePointCity)"
names(filteredData) <-c("CRD_ID","StartDatetime","EndDatetime","Duration"
,"Volume","ChargePointStreet","ChargePointZIP","ChargePointCity")
names(filteredData) <-c("CRD_ID","StartDatetime","EndDatetime","Duration"
,"Volume","ChargePointStreet","ChargePointZIP","ChargePointCity")
names(filteredData) <-c("CRD_ID","StartDatetime","EndDatetime","Duration"
,"Volume","ChargePointStreet","ChargePointZIP","ChargePointCity")
colnames(filteredData)
removeSpaces <- function(text){
filteredData[ChargePointZIP == text] <- gsub(" ", "", filteredData[ChargePointZIP])
}
lapply(filteredData$ChargePointZIP,removeSpaces("3086 PR"))
View(filteredData)
lapply(filteredData,ChargePointZIP,removeSpaces("3086 PR"))
removeSpaces <- function(text){
for(i in filteredData$ChargePointZIP)
if(i == text){
filteredData$ChargePointZIP[i] <- gsub(" ", "",  filteredData$ChargePointZIP[i])
}
}
lapply(filteredData,ChargePointZIP,removeSpaces("3086 PR"))
apply(filteredData,ChargePointZIP,removeSpaces("3086 PR"))
apply(filteredData$ChargePointZIP,removeSpaces("3086 PR"))
apply(filteredData,ChargePointZIP,removeSpaces("3086 PR"))
length(filteredData$ChargePointZIP)
removeSpaces <- function(text){
for(i in length(filteredData$ChargePointZIP))
if(i == text){
filteredData$ChargePointZIP[i] <- gsub(" ", "",  filteredData$ChargePointZIP[i])
}
}
apply(filteredData,ChargePointZIP,removeSpaces("3086 PR"))
removeSpaces <- function(text){
for(i in length(filteredData$ChargePointZIP))
if(i == text){
filteredData$ChargePointZIP[i] <- gsub(" ", "",  filteredData$ChargePointZIP[i])
}
}
apply(filteredData,ChargePointZIP,removeSpaces("3086 PR"))
removeSpaces <- function(text){
for(i in 1:length(filteredData$ChargePointZIP))
if(i == text){
filteredData$ChargePointZIP[i] <- gsub(" ", "",  filteredData$ChargePointZIP[i])
}
}
apply(filteredData,ChargePointZIP,removeSpaces("3086 PR"))
filteredData$ChargePointZIP
removeSpaces <- function(text){
for(i in filteredData$ChargePointZIP)
if(i == text){
filteredData$ChargePointZIP[i] <- gsub(" ", "",  filteredData$ChargePointZIP[i])
}
}
apply(filteredData,ChargePointZIP,removeSpaces("3086 PR"))
colnames(filteredData) <- c("hours")
colnames(filteredData)
names(filteredData) <-c("CRD_ID","StartDatetime","EndDatetime","Duration"
,"Volume","ChargePointStreet","ChargePointZIP","ChargePointCity")
colnames(filteredData)
View(filteredData)
colnames(filteredData) <- c("CRD_ID","StartDatetime","EndDatetime","Duration"
,"Volume","ChargePointStreet","ChargePointZIP","ChargePointCity","hours")
removeSpaces <- function(text){
for(i in filteredData$ChargePointZIP)
if(i == text){
filteredData$ChargePointZIP[which(filteredData$ChargePointZIP==text)] <- gsub(" ", "",  filteredData$ChargePointZIP[i])
}
}
apply(filteredData,ChargePointZIP,removeSpaces("3086 PR"))
removeSpaces <- function(text){
for(i in filteredData$ChargePointZIP)
if(i == text){
filteredData$ChargePointZIP[i] <- gsub(" ", "",  filteredData$ChargePointZIP[i])
}
}
apply(filteredData,ChargePointZIP,removeSpaces("3086 PR"))
removeSpaces <- function(text){
for(i in filteredData$ChargePointZIP)
if(i == text){
newValue <- gsub(" ", "",  filteredData$ChargePointZIP[i])
filteredData$ChargePointZIP[i] <- newValue
}
}
apply(filteredData,ChargePointZIP,removeSpaces("3086 PR"))
removeSpaces <- function(text){
for(i in filteredData$ChargePointZIP)
if(i == text){
newValue <- gsub(" ", "",  filteredData$ChargePointZIP[i])
filteredData$ChargePointZIP[i] <- newValue
}
}
apply(filteredData,ChargePointZIP,removeSpaces(,"3086 PR"))
removeSpaces <- function(text){
for(i in filteredData$ChargePointZIP)
if(i == text){
newValue <- gsub(" ", "",  filteredData$ChargePointZIP[i])
filteredData$ChargePointZIP[i] <- newValue
}
}
apply(filteredData,ChargePointZIP,removeSpaces("3086 PR"))
library(RMongo)
mcon <- mongoDbConnect("Practicum",port=27017)
moviesCollection <- "Data"
kaggleData<- dbGetQuery(mcon, moviesCollection,"{}",skip=0,limit=100000)
head(kaggleData)
View(kaggleData)
data.frame(lapply(kaggleData$movie_title, gsub, pattern = "Ã‚Â", replacement = ""))
head(kaggleData)
View(kaggleData)
data.frame(lapply(kaggleData$movie_title, gsub, pattern = "Ã‚Â ", replacement = ""))
head(kaggleData)
data.frame(lapply(kaggleData$movie_title, gsub, pattern = "Ã‚Â ", replacement = ""))
removeSpaces <- function(text){
for(i in filteredData$ChargePointZIP)
if(i == text){
newValue <- gsub(" ", "",  filteredData$ChargePointZIP[i])
filteredData$ChargePointZIP[i] <- newValue
}
}
apply(filteredData,ChargePointZIP,removeSpaces("3086 PR"))
data.frame(lapply(kaggleData$movie_title, gsub, pattern = "Ã‚Â ", replacement = ""))
removeSpaces <- function(text){
for(i in filteredData$ChargePointZIP)
if(i == text){
newValue <- gsub(" ", "",  filteredData$ChargePointZIP[i])
filteredData$ChargePointZIP[i] <- newValue
}
}
apply(filteredData,ChargePointZIP,removeSpaces("3086 PR"))
kaggleData <- apply(kaggleData,2,function(x) gsub("Ã‚Â","",kaggleData$movie_title))
head(kaggleData)
View(kaggleData)
View(kaggleData)
View(kaggleData)
getwd()
setwd ("D:/Vakken/Data Storage and Processing")
moviesFromKaggle <- read.csv2("movie_metadata.csv", sep=",")
head(moviesFromKaggle)
movies <- read.csv2("movies.csv", sep=",")
ratings <- read.csv2("ratings.csv", sep=",")
links <- read.csv2("links.csv", sep=",")
tags <- read.csv2("tags.csv", sep=",")
moviesRatings <- merge(movies, ratings, by="movieId")
head(moviesRatings)
moviesRatingsLinks <- merge(moviesRatings, links, by="movieId")
head(moviesRatingsLinks)
mcon <- mongo(collection="Data", db="Practicum", url="mongodb://localhost")
mcon$insert(moviesFromKaggle)
mcon2 <- mongo(collection="DataMovielens", db="Practicum", url="mongodb://localhost")
mcon2$insert(moviesRatingsLinks)
7)
moviesCollection <- "Data"
kaggleData<- dbGetQuery(mcon, moviesCollection,"{}",skip=0,limit=100000)
moviesCollection <- "Data"
kaggleData<- dbGetQuery(mcon, moviesCollection,"{}",skip=0,limit=100000)
head(kaggleData)
mcon <- mongo(collection="Data", db="Practicum", url="mongodb://localhost")
mcon$insert(moviesFromKaggle)
mcon <- mongo(collection="Data", db="Practicum", url="mongodb://localhost")
mcon$insert(moviesFromKaggle)
moviesFromKaggle <- read.csv2("movie_metadata.csv", sep=",")
head(moviesFromKaggle)
mcon <- mongo(collection="Data", db="Practicum", url="mongodb://localhost")
library(RMongo)
library(mongolite)
mcon <- mongo(collection="Data", db="Practicum", url="mongodb://localhost")
mcon$insert(moviesFromKaggle)
mcon2 <- mongo(collection="DataMovielens", db="Practicum", url="mongodb://localhost")
mcon2$insert(moviesRatingsLinks)
moviesCollection <- "Data"
kaggleData<- dbGetQuery(mcon, moviesCollection,"{}",skip=0,limit=100000)
library(RMongo)
mcon <- mongoDbConnect("Practicum",port=27017)
moviesCollection <- "Data"
kaggleData<- dbGetQuery(mcon, moviesCollection,"{}",skip=0,limit=100000)
kaggleData$movie_title <- apply(kaggleData$movie_title,2,function(x) gsub("Ã‚Â","",kaggleData$movie_title))
kaggleData$movie_title <- apply(kaggleData$movie_title,1,function(x) gsub("Ã‚Â","",kaggleData$movie_title))
kaggleData <- apply(kaggleData$movie_title,1,function(x) gsub("Ã‚Â","",kaggleData$movie_title))
View(kaggleData)
kaggleData$movie_title <- apply(kaggleData$movie_title,2,function(x) gsub("Ã‚Â","",kaggleData$movie_title))
kaggleData$movie_title <- apply(kaggleData,2,function(x) gsub("Ã‚Â","",kaggleData$movie_title))
View(kaggleData)
?apply
kaggleData.frame
kaggleData$amount_of_characters
View(kaggleData)
kaggleData$movie_title <- apply(kaggleData,2,function(x) gsub("Ã‚Â","",kaggleData$movie_title))
View(kaggleData)
head(kaggleData)
View(kaggleData)
removeSpaces <- function(text){
for(i in filteredData$ChargePointZIP)
if(i == text){
newValue <- gsub(" ", "",  filteredData$ChargePointZIP[i])
filteredData$ChargePointZIP[i] <- newValue
}
}
apply(filteredData,ChargePointZIP,removeSpaces("3086 PR"))
class(kaggleData)
library(dplyr)
getwd()
setwd ( "D:/Downloads")
randomFile <- read.csv2("File-A_BD3.csv", sep=";")
filteredData <- select(randomFile,1:8)
colnames(filteredData)
names(filteredData) <-c("CRD_ID","StartDatetime","EndDatetime","Duration"
,"Volume","ChargePointStreet","ChargePointZIP","ChargePointCity")
colnames(filteredData)
removeSpaces <- function(text){
for(i in filteredData$ChargePointZIP)
if(i == text){
newValue <- gsub(" ", "",  filteredData$ChargePointZIP[i])
filteredData$ChargePointZIP[i] <- newValue
}
}
apply(filteredData,ChargePointZIP,removeSpaces("3086 PR"))
View(randomFile)
filteredData <- select(randomFile,1:8)
View(filteredData)
names(filteredData) <-c("CRD_ID","StartDatetime","EndDatetime","Duration"
,"Volume","ChargePointStreet","ChargePointZIP","ChargePointCity")
View(filteredData)
apply(filteredData,ChargePointZIP,removeSpaces("3086 PR"))
?apply
")
ratings <- read.csv2("ratings.csv", sep=",")
links <- read.csv2("links.csv", sep=",")
tags <- read.csv2("tags.csv", sep=",")
setwd ("D:/Vakken/Data Storage and Processing")
movies <- read.csv2("movies.csv", sep=",")
ratings <- read.csv2("ratings.csv", sep=",")
links <- read.csv2("links.csv", sep=",")
tags <- read.csv2("tags.csv", sep=",")
moviesRatings <- merge(movies, ratings, by="movieId")
moviesRatingsLinks <- merge(moviesRatings, links, by="movieId")
head(moviesRatingsLinks)
mcon2 <- mongo(collection="DataMovielens", db="Practicum", url="mongodb://localhost")
mcon2$insert(moviesRatingsLinks)
mcon2 <- mongo(collection="DataMovielens", db="Practicum", url="mongodb://localhost")
mcon2$insert(moviesRatingsLinks)
